plugins {
    id 'java-library'
    // to unleash the lombok magic
    id "io.freefair.lombok" version "6.2.0"
    // to support Kotlin
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    // to make our tests output more fancy
    id 'com.adarshr.test-logger' version '3.1.0'
    // to build fat jars
    id "com.github.johnrengelman.shadow" version "7.1.0"
    // to publish packages
    id 'maven-publish'
    // code linting
    id "com.diffplug.spotless" version "6.2.0"
    //  test coverage
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.12.0'
}

archivesBaseName = "truelayer-java"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}
spotless {
    java {
        palantirJavaFormat()
    }
}

shadowJar {
    archiveBaseName.set(archivesBaseName)

    // avoid setting a default 'all' suffix to exported jar
    archiveClassifier.set('')

    // include sources in the exported jar
    from sourceSets.main.allJava
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/truelayer-java.version.properties").withWriter { w ->
            Properties p = new Properties()
            p['name'] = archivesBaseName
            p['version'] = project.version != "unspecified" ? project.version : "DEVELOPMENT"
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    // repository for our signing library
    maven { url 'https://jitpack.io' }
}

test {
    useJUnitPlatform{
        excludeTags "acceptance" // exclude acceptance tests from the default test task
    }
}

testlogger {
    theme 'mocha'
}

tasks.register('unit-tests', Test) {
    outputs.upToDateWhen { false }
    useJUnitPlatform{
        excludeTags "integration"
        excludeTags "acceptance"
    }
}

tasks.register('integration-tests', Test) {
    outputs.upToDateWhen { false }
    useJUnitPlatform{
        includeTags "integration"
    }
}

tasks.register('acceptance-tests', Test) {
    outputs.upToDateWhen { false }
    useJUnitPlatform{
        includeTags "acceptance"
    }
    testLogging.showStandardStreams = true
}

dependencies {
    // Utilities
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'

    // HTTP client
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'

    // TL signing library
    implementation 'com.github.truelayer:truelayer-signing:java-v0.1.1'

    // Serialization
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.13.0'

    // Logging
    implementation group: 'org.tinylog', name: 'tinylog-api', version: '2.4.1'
    implementation group: 'org.tinylog', name: 'tinylog-impl', version: '2.4.1'

    // JUnit test framework.
    testImplementation(platform('org.junit:junit-bom:5.8.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')

    // Mocking libraries
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.0.0'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '4.0.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.0.0'
    testImplementation group: "com.github.tomakehurst", name:"wiremock-jre8", version: "2.31.0"
}

jacocoTestReport {
    dependsOn "unit-tests"
    reports {
        xml.required = true
        html.required = true
    }
    getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/unit-tests.exec"))
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'truelayer/java/**/entities/**',
                    'truelayer/java/common/Constants.*',
                    'truelayer/java/common/Constants$*.*',
                    'truelayer/java/http/TrueLayerApiAdapterFactory.*',
                    'truelayer/java/http/TrueLayerResponseCallAdapter.*',
                    'truelayer/java/http/TrueLayerResponseCallAdapter$*.*'
            ])
        }))
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/TrueLayer/truelayer-java"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}