package com.truelayer.java.integration;

import static com.github.tomakehurst.wiremock.client.WireMock.*;
import static com.truelayer.java.Constants.HeaderNames.IDEMPOTENCY_KEY;

import com.truelayer.java.TestUtils.RequestStub;
import com.truelayer.java.entities.IdempotencyKey;
import com.truelayer.java.payments.entities.CreatePaymentRequest;
import lombok.SneakyThrows;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

@DisplayName("Idempotency key management integration tests")
public class IdempotencyManagementTests extends IntegrationTests {

    private static final String UUID_REGEX_PATTERN = "^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$";

    @SneakyThrows
    @Test
    @DisplayName("Should send an auto generated UUID as idempotency key if not provided")
    public void shouldSendAutoGeneratedIdempotencyKey() {
        RequestStub.New()
                .method("post")
                .path(urlPathEqualTo("/connect/token"))
                .status(200)
                .bodyFile("auth/200.access_token.json")
                .build();
        CreatePaymentRequest paymentRequest = CreatePaymentRequest.builder().build();

        tlClient.payments().createPayment(paymentRequest).get();

        verify(postRequestedFor(urlPathEqualTo("/payments")).withHeader(IDEMPOTENCY_KEY, matching(UUID_REGEX_PATTERN)));
    }

    @SneakyThrows
    @Test
    @DisplayName("Should send a provided custom idempotency key")
    public void shouldSendAProvidedCustomIdempotencyKey() {
        RequestStub.New()
                .method("post")
                .path(urlPathEqualTo("/connect/token"))
                .status(200)
                .bodyFile("auth/200.access_token.json")
                .build();
        CreatePaymentRequest paymentRequest = CreatePaymentRequest.builder().build();
        IdempotencyKey customIdempotencyKey = new IdempotencyKey("custom-key");

        tlClient.payments().createPayment(customIdempotencyKey, paymentRequest).get();

        verify(postRequestedFor(urlPathEqualTo("/payments"))
                .withHeader(IDEMPOTENCY_KEY, equalTo(customIdempotencyKey.getValue())));
    }
}
