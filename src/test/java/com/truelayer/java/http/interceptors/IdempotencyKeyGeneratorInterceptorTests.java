package com.truelayer.java.http.interceptors;

import static com.truelayer.java.Constants.HeaderNames.IDEMPOTENCY_KEY;
import static com.truelayer.java.TestUtils.UUID_REGEX_PATTERN;
import static org.junit.jupiter.api.Assertions.assertTrue;

import com.truelayer.java.entities.IdempotencyKey;
import okhttp3.Interceptor;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

class IdempotencyKeyGeneratorInterceptorTests extends BaseInterceptorTests {
    @Override
    protected Interceptor getInterceptor() {
        return new IdempotencyKeyGeneratorInterceptor();
    }

    @Test
    @DisplayName("It should add an Idempotency-Key header with a UUID to the original request")
    public void shouldAddAnAutoGeneratedUuidIdempotencyKeyHeader() {
        buildRequest();

        intercept();

        verifyThat(request -> assertTrue(
                UUID_REGEX_PATTERN.matcher(request.header(IDEMPOTENCY_KEY)).matches()));
    }

    @Test
    @DisplayName("It should add an provided custom Idempotency-Key header to the original request")
    public void shouldAddAProvidedCustomIdempotencyKeyHeader() {
        IdempotencyKey key = new IdempotencyKey("custom-idempotency");
        buildRequest(key);

        intercept();

        verifyThat(request -> request.header(IDEMPOTENCY_KEY).equals(key.getValue()));
    }
}
