name: Build

on:
  workflow_call:
    outputs:
      project_version:
        description: "The project version"
        value: ${{ jobs.build.outputs.project_version }}

jobs:
  build:
    name: Build and tests
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        java-distribution: [ temurin ]
        java-version: [ 11, 16, 17, 18, 19, 20 ]
    runs-on: ${{ matrix.os }}
    outputs:
      project_version: ${{ steps.get_project_version.outputs.project_version }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.java-distribution }}
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Get project version
        id: get_project_version
        run: |
          PROJECT_VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          echo "::set-output name=project_version::$PROJECT_VERSION"
      - name: Semantic versioning check
        run: |
          if [[ "${{steps.get_project_version.outputs.project_version}}" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
              echo "Project version ${{steps.get_project_version.outputs.project_version}} is valid"
          else
              echo "Project version ${{steps.get_project_version.outputs.project_version}} is not valid"; exit 1;
          fi
      - name: Lint
        run: ./gradlew spotlessJavaCheck
      - name: Build
        run: ./gradlew build -x test
      - name: Unit tests
        run: ./gradlew unit-tests
      - name: Integration tests
        run: ./gradlew integration-tests