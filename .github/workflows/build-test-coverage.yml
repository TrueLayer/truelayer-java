# Reusable workflow to build, run unit and integration test and coverage analysis, referenced by workflow-*.yml pipelines.
name: Build, tests and coverage analysis

on:
  workflow_call:
    secrets:
      coveralls_repo_token:
        required: true
    inputs:
      checkout_ref:
        description: 'The reference to checkout before running the acceptance tests. Used to run the tests on a fork.'
        required: true
        type: string
    outputs:
      project_version:
        description: "The project version"
        value: ${{ jobs.build-test.outputs.project_version }}

jobs:
  build-test:
    name: Build and tests
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        java-distribution: [ temurin ]
        java-version: [ 11, 17, 20, 21 ]
    runs-on: ${{ matrix.os }}
    outputs:
      project_version: ${{ steps.get_project_version.outputs.project_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}
      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.java-distribution }}
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Get project version
        id: get_project_version
        run: |
          PROJECT_VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          echo "project_version=$PROJECT_VERSION" >> $GITHUB_OUTPUT
      - name: Semantic versioning check
        run: |
          if [[ "${{steps.get_project_version.outputs.project_version}}" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
              echo "Project version ${{steps.get_project_version.outputs.project_version}} is valid"
          else
              echo "Project version ${{steps.get_project_version.outputs.project_version}} is not valid"; exit 1;
          fi
      - name: Lint
        run: ./gradlew spotlessJavaCheck
      - name: Build
        run: ./gradlew build -x test
      - name: Unit tests
        run: ./gradlew unit-tests
      - name: Integration tests
        run: ./gradlew integration-tests
  coverage:
    name: Test coverage analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Test coverage
        run: ./gradlew unit-tests jacocoTestReport coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.coveralls_repo_token }}
          CI_BRANCH: ${{ inputs.checkout_ref }}